{"ast":null,"code":"import * as gridActions from \"../actions/types/grid-types\";\nconst INITIAL_STATE = [[{\n  type: \"[0][0]\",\n  visited: true\n}, {\n  type: \"[0][1]\",\n  visited: true\n}, {\n  type: \"[0][1]\",\n  visited: true\n}], [{\n  type: \"[1][0]\",\n  visited: true\n}, {\n  type: \"[1][1]\",\n  visited: true\n}, {\n  type: \"[1][2]\",\n  visited: true\n}], [{\n  type: \"[2][0]\",\n  visited: true\n}, {\n  type: \"[2][1]\",\n  visited: true\n}]]; // const INITIAL_STATE=[[\"initial\",false,true],[\"pizza\"],[\"topping\"]];\n// const INITIAL_STATE=[[{type: \"row 1 col 0\", visited: true},{type: \"pizza\", visited: true}],[{type: \"topping\", visited: true},{},{}]];\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  if (action.type === gridActions.CHANGED_NODE_TYPE) {\n    return { ...state\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/redux/reducers/grid-reducer.js"],"names":["gridActions","INITIAL_STATE","type","visited","reducer","state","action","CHANGED_NODE_TYPE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AAEA,MAAMC,aAAa,GAAG,CAClB,CAAC;AAAEC,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAAD,EAAoC;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAApC,EAAsE;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAAtE,CADkB,EAElB,CAAC;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAAD,EAAoC;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAApC,EAAuE;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAAvE,CAFkB,EAGlB,CAAC;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAAD,EAAoC;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,OAAO,EAAE;AAA3B,CAApC,CAHkB,CAAtB,C,CAKA;AACA;;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,aAAzB,EAAwCK,MAAxC,EAAgD;AAC3D,MAAIA,MAAM,CAACJ,IAAP,KAAgBF,WAAW,CAACO,iBAAhC,EAAmD;AAC/C,WAAO,EAAE,GAAGF;AAAL,KAAP;AACH;;AACD,SAAOA,KAAP;AACH","sourcesContent":["import * as gridActions from \"../actions/types/grid-types\"\n\nconst INITIAL_STATE = [\n    [{ type: \"[0][0]\", visited: true }, { type: \"[0][1]\", visited: true },{ type: \"[0][1]\", visited: true }],\n    [{ type: \"[1][0]\", visited: true }, { type: \"[1][1]\", visited: true }, { type: \"[1][2]\", visited: true }],\n    [{ type: \"[2][0]\", visited: true }, { type: \"[2][1]\", visited: true }]\n];\n// const INITIAL_STATE=[[\"initial\",false,true],[\"pizza\"],[\"topping\"]];\n// const INITIAL_STATE=[[{type: \"row 1 col 0\", visited: true},{type: \"pizza\", visited: true}],[{type: \"topping\", visited: true},{},{}]];\n\n\nexport default function reducer(state = INITIAL_STATE, action) {\n    if (action.type === gridActions.CHANGED_NODE_TYPE) {\n        return { ...state, };\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}