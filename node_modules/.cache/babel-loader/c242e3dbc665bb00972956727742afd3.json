{"ast":null,"code":"import * as nodeActions from \"../actions/types/node-types\";\nconst INITIAL_STATE = {\n  start_coordinates: [5, 5],\n  end_coordinates: [9, 9],\n  additional_destination_coordinates: {},\n  wall_coordinates: {},\n  weight_coordinates: {}\n}; // additional destination: {\n//  \"0-3\": [0,3],\n//  \"2-2\": [2,2]\n// } \n\nexport default function reducer(state = INITIAL_STATE, action) {\n  if (action.type === nodeActions.MOVED_START) {\n    return { ...state,\n      start_coordinates: action.payload.coordinates\n    };\n  }\n\n  if (action.type === nodeActions.MOVED_END) {\n    return { ...state,\n      end_coordinates: action.payload.coordinates\n    };\n  }\n\n  if (action.type === nodeActions.ADDED_WALL) {\n    // console.log(\"wall_coordinates: \", action.payload.added_wall_coordinates, \"state \",...state.wall_coordinates].push(action.payload.added_wall_coordinates))\n    return { ...state,\n      wall_coordinates: { ...state.wall_coordinates,\n        [action.payload.key]: action.payload.coordinates\n      }\n    };\n  }\n\n  if (action.type === nodeActions.REMOVED_WALL) {\n    delete state.wall_coordinates[action.payload.key];\n    return { ...state,\n      wall_coordinates: { ...state.wall_coordinates\n      }\n    };\n  }\n\n  if (action.type === nodeActions.ADDED_WEIGHT) {\n    return { ...state,\n      weight_coordinates: { ...state.weight_coordinates,\n        [action.payload.key]: action.payload.coordinates\n      }\n    };\n  }\n\n  if (action.type === nodeActions.REMOVED_WEIGHT) {\n    delete state.weight_coordinates[action.payload.key];\n    return { ...state,\n      weight_coordinates: { ...state.weight_coordinates\n      }\n    };\n  }\n\n  if (action.type === nodeActions.ADDED_ADDITIONAL_DESTINATION_NODE) {\n    return { ...state,\n      additional_destination_coordinates: { ...state.additional_destination_coordinates,\n        [action.payload.key]: action.payload.coordinates\n      }\n    };\n  }\n\n  if (action.type === nodeActions.REMOVED_ADDITIONAL_DESTINATION_NODE) {\n    delete state.additional_destination_coordinates[action.payload.key];\n    return { ...state,\n      additional_destination_coordinates: { ...state.additional_destination_coordinates\n      }\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/redux/reducers/node-reducer.js"],"names":["nodeActions","INITIAL_STATE","start_coordinates","end_coordinates","additional_destination_coordinates","wall_coordinates","weight_coordinates","reducer","state","action","type","MOVED_START","payload","coordinates","MOVED_END","ADDED_WALL","key","REMOVED_WALL","ADDED_WEIGHT","REMOVED_WEIGHT","ADDED_ADDITIONAL_DESTINATION_NODE","REMOVED_ADDITIONAL_DESTINATION_NODE"],"mappings":"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","sourcesContent":["import * as nodeActions from \"../actions/types/node-types\";\n\nconst INITIAL_STATE = {\n    start_coordinates: [5, 5],\n    end_coordinates: [9, 9],\n    additional_destination_coordinates: {},\n    wall_coordinates: {},\n    weight_coordinates: {},\n\n}\n\n// additional destination: {\n//  \"0-3\": [0,3],\n//  \"2-2\": [2,2]\n// } \n\nexport default function reducer(state = INITIAL_STATE, action) {\n\n    if (action.type === nodeActions.MOVED_START) {\n        return { ...state, start_coordinates: action.payload.coordinates }\n    }\n    if (action.type === nodeActions.MOVED_END) {\n        return { ...state, end_coordinates: action.payload.coordinates };\n    }\n\n    if (action.type === nodeActions.ADDED_WALL) {\n        // console.log(\"wall_coordinates: \", action.payload.added_wall_coordinates, \"state \",...state.wall_coordinates].push(action.payload.added_wall_coordinates))\n        return { ...state, \n            wall_coordinates: {...state.wall_coordinates, [action.payload.key]: action.payload.coordinates}\n        }\n    }\n\n    if (action.type === nodeActions.REMOVED_WALL) {\n        delete state.wall_coordinates[action.payload.key];\n        return {\n            ...state, wall_coordinates: {...state.wall_coordinates}\n        }\n    }\n\n    if (action.type === nodeActions.ADDED_WEIGHT) {\n        return { ...state, \n            weight_coordinates: {...state.weight_coordinates, [action.payload.key]: action.payload.coordinates}\n        }\n\n    }\n\n    if (action.type === nodeActions.REMOVED_WEIGHT) {\n        delete state.weight_coordinates[action.payload.key];\n        return {\n            ...state, weight_coordinates: {...state.weight_coordinates}\n        }\n    }\n\n\n    if (action.type === nodeActions.ADDED_ADDITIONAL_DESTINATION_NODE) {\n        return { ...state, \n            additional_destination_coordinates: {...state.additional_destination_coordinates, [action.payload.key]: action.payload.coordinates}\n        }\n\n    }\n\n    if (action.type === nodeActions.REMOVED_ADDITIONAL_DESTINATION_NODE) {\n        delete state.additional_destination_coordinates[action.payload.key];\n        return {\n            ...state, additional_destination_coordinates: {...state.additional_destination_coordinates}\n        }\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}