{"ast":null,"code":"var _jsxFileName = \"/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/instructions-page.js\";\nimport React, { Component } from 'react';\nimport Card from '../atoms/holders/card';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MasterCTA from '../atoms/controls/call-to-actions/abstractions/master-call-to-action';\nimport \"../../css/text.css\";\nlibrary.add(faCar);\nlibrary.add(faSquare);\nexport default class InstructionsPage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"Path Finding Algorithm Visualizer\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"What is A Path Finding Algorithm?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Imagine you are a driver for a ride share company. You wouldn't want to be driving in circles trying to get to your final destination, right? You would waste so much time and gas! \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"This app shows an optimized path from getting from point A to point B.\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../images/pathfinding.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Meet The Algorithms\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Some Algorithms are more efficient than others!\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, \"A* Search\"), \" (weighted): arguably the best algorithm; guarentee's the shortest path. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"Dijkstra's Algorithm\"), \" (weighted): the father of algorithms; It will guarentee the shortest path. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, \"Bredth First Search\"), \" (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \"Depth First Search\"), \" (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! \"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Items\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"you can add and remove items from the grid. Items make it a bit trickier for the algorithm to search by adding conditions that the algorithm needs to consider. Below are descriptions of the items:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"yellow\",\n      icon: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }), \"/\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"yellow\",\n      icon: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 76\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 131\n      }\n    }, \"Visiting To Calculate Distance\"), \": Like when your GPS is taking time to calculate the best route.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"orange\",\n      icon: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }), \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 77\n      }\n    }, \"Optimized Path\"), \": GPS has calculated the best route!\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"car\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), \": Your Starting Place\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"flag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }), \": The Ending Place\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"street-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }), \": Additional Destination - You need to pickup another passenger before going to the end, like sharing a ride to the same place.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), \": Wall - You cannot drive through this, it is blocked off!\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"weight-hanging\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), \": Weight - It takes more time to drive through this, imagine heavy traffic.\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Choose an algorithm (A* is chosen by default)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Add an Item to the Grid (If you want)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Press play!\")), /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Get Started!\"));\n  }\n\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/instructions-page.js"],"names":["React","Component","Card","library","faCar","faSquare","FontAwesomeIcon","MasterCTA","add","InstructionsPage","render","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Card from '../atoms/holders/card'\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MasterCTA from '../atoms/controls/call-to-actions/abstractions/master-call-to-action';\nimport \"../../css/text.css\"\nlibrary.add(faCar);\nlibrary.add(faSquare);\nexport default class InstructionsPage extends Component {\n    render() {\n        return (\n            <Card>\n                <h1>Path Finding Algorithm Visualizer</h1>\n                <h2>What is A Path Finding Algorithm?</h2>\n                <p>Imagine you are a driver for a ride share company. You wouldn't want to be driving in circles trying to get to your final destination, right? You would waste so much time and gas! </p>\n                <p>This app shows an optimized path from getting from point A to point B.</p>\n                <img src={require('../../images/pathfinding.png')}/>\n\n                <h2>Meet The Algorithms</h2>\n                <h3>Some Algorithms are more efficient than others!</h3>\n                <ul><span>A* Search</span> (weighted): arguably the best algorithm; guarentee's the shortest path. </ul>\n                <ul><span>Dijkstra's Algorithm</span> (weighted): the father of algorithms; It will guarentee the shortest path. </ul>\n                <ul><span>Bredth First Search</span> (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. </ul>\n                <ul><span>Depth First Search</span> (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! </ul>\n\n                <h3>Items</h3>\n                <p>you can add and remove items from the grid. Items make it a bit trickier for the algorithm to search by adding conditions that the algorithm needs to consider. Below are descriptions of the items:</p>\n                <ul>\n                <li><FontAwesomeIcon className={\"yellow\"} icon=\"square\" />/<FontAwesomeIcon className={\"yellow\"} icon=\"square\" /> <span>Visiting To Calculate Distance</span>: Like when your GPS is taking time to calculate the best route.</li>\n                <li><FontAwesomeIcon className={\"orange\"} icon=\"square\" />: <span>Optimized Path</span>: GPS has calculated the best route!</li>\n                <li><FontAwesomeIcon icon=\"car\" />: Your Starting Place</li>\n                <li><FontAwesomeIcon icon=\"flag\" />: The Ending Place</li>\n                <li><FontAwesomeIcon icon=\"street-view\" />: Additional Destination - You need to pickup another passenger before going to the end, like sharing a ride to the same place.</li>\n                <li><FontAwesomeIcon icon=\"square\" />: Wall - You cannot drive through this, it is blocked off!</li>\n                <li><FontAwesomeIcon icon=\"weight-hanging\" />: Weight - It takes more time to drive through this, imagine heavy traffic.</li>\n\n            </ul>\n\n\n                <h2>Getting Started</h2>\n                <ul>\n                <li>Choose an algorithm (A* is chosen by default)</li>\n                <li>Add an Item to the Grid (If you want)</li>\n                <li>Press play!</li>\n                </ul>\n\n                <MasterCTA type={\"button\"}>Get Started!</MasterCTA>\n            </Card>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}