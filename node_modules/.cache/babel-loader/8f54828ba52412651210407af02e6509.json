{"ast":null,"code":"import store from \"../../redux/stores/store\";\nlet node = null;\nlet prev_coordinates = null;\nexport function grabItem(id = '') {\n  let str_coordinates = id.split(\"-\");\n  let row = parseInt(str_coordinates[0]);\n  let column = parseInt(str_coordinates[1]);\n  prev_coordinates = [row, column];\n  let grid = store.getState().grid;\n  node = grid[row][str_coordinates[column]];\n}\nexport function releaseItem(id = '') {\n  let str_coordinates = id.split(\"-\");\n  let row = parseInt(str_coordinates[0]);\n  let column = parseInt(str_coordinates[1]);\n  let grid = store.getState().grid;\n\n  if (node['type'] === \"start_node\" || node['type'] === \"end_node\") {\n    // INITIAL_STATE[9][9] = { type: \"end_node\", visited: false, shortest_path: false}\n    grid[prev_coordinates[0]][prev_coordinates[1]] = {\n      type: \"empty_node\",\n      visited: false,\n      shortest_path: false\n    };\n    grid[str_coordinates[0]][str_coordinates[1]] = {\n      type: \"start_node\",\n      visited: false,\n      shortest_path: false\n    };\n  }\n\n  console.log(\"released at: \", id);\n  console.log(\"node released: \", node);\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/helpers/action-listeners/on-mouse.js"],"names":["store","node","prev_coordinates","grabItem","id","str_coordinates","split","row","parseInt","column","grid","getState","releaseItem","type","visited","shortest_path","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AAEA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAIC,gBAAgB,GAAG,IAAvB;AAGA,OAAO,SAASC,QAAT,CAAkBC,EAAE,GAAC,EAArB,EACP;AACI,MAAIC,eAAe,GAAGD,EAAE,CAACE,KAAH,CAAS,GAAT,CAAtB;AACA,MAAIC,GAAG,GAAGC,QAAQ,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAlB;AACA,MAAII,MAAM,GAAGD,QAAQ,CAACH,eAAe,CAAC,CAAD,CAAhB,CAArB;AACAH,EAAAA,gBAAgB,GAAG,CAACK,GAAD,EAAKE,MAAL,CAAnB;AACA,MAAIC,IAAI,GAAGV,KAAK,CAACW,QAAN,GAAiBD,IAA5B;AACAT,EAAAA,IAAI,GAAGS,IAAI,CAACH,GAAD,CAAJ,CAAUF,eAAe,CAACI,MAAD,CAAzB,CAAP;AAEH;AACD,OAAO,SAASG,WAAT,CAAqBR,EAAE,GAAC,EAAxB,EACP;AACI,MAAIC,eAAe,GAAGD,EAAE,CAACE,KAAH,CAAS,GAAT,CAAtB;AACA,MAAIC,GAAG,GAAGC,QAAQ,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAlB;AACA,MAAII,MAAM,GAAGD,QAAQ,CAACH,eAAe,CAAC,CAAD,CAAhB,CAArB;AACA,MAAIK,IAAI,GAAGV,KAAK,CAACW,QAAN,GAAiBD,IAA5B;;AAEA,MAAGT,IAAI,CAAC,MAAD,CAAJ,KAAiB,YAAjB,IAAiCA,IAAI,CAAC,MAAD,CAAJ,KAAiB,UAArD,EACA;AACJ;AACAS,IAAAA,IAAI,CAACR,gBAAgB,CAAC,CAAD,CAAjB,CAAJ,CAA0BA,gBAAgB,CAAC,CAAD,CAA1C,IAAiD;AAACW,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,OAAO,EAAE,KAA9B;AAAqCC,MAAAA,aAAa,EAAE;AAApD,KAAjD;AACAL,IAAAA,IAAI,CAACL,eAAe,CAAC,CAAD,CAAhB,CAAJ,CAAyBA,eAAe,CAAC,CAAD,CAAxC,IAA+C;AAAEQ,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAE,KAA/B;AAAsCC,MAAAA,aAAa,EAAE;AAArD,KAA/C;AACK;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bb,EAA7B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BhB,IAA/B;AACH","sourcesContent":["import store from \"../../redux/stores/store\";\n\nlet node = null\nlet prev_coordinates = null;\n\n\nexport function grabItem(id='')\n{\n    let str_coordinates = id.split(\"-\");\n    let row = parseInt(str_coordinates[0]);\n    let column = parseInt(str_coordinates[1]);\n    prev_coordinates = [row,column];\n    let grid = store.getState().grid\n    node = grid[row][str_coordinates[column]];\n\n}\nexport function releaseItem(id='')\n{\n    let str_coordinates = id.split(\"-\");\n    let row = parseInt(str_coordinates[0]);\n    let column = parseInt(str_coordinates[1]);\n    let grid = store.getState().grid\n\n    if(node['type'] === \"start_node\" || node['type'] === \"end_node\")\n    {\n// INITIAL_STATE[9][9] = { type: \"end_node\", visited: false, shortest_path: false}\ngrid[prev_coordinates[0]][prev_coordinates[1]] = {type: \"empty_node\", visited: false, shortest_path: false};\ngrid[str_coordinates[0]][str_coordinates[1]] = { type: \"start_node\", visited: false, shortest_path: false}\n    }\n    console.log(\"released at: \", id);\n    console.log(\"node released: \", node);\n}"]},"metadata":{},"sourceType":"module"}