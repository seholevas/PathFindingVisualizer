{"ast":null,"code":"import store from \"../stores/store\";\nimport * as nodeDispatched from \"../actions/action-creators/node-action-creator\";\nexport async function dispatchedAddedAdditionalDestination(key, coordinates = []) {\n  await store.dispatch(nodeDispatched.addedAdditionalDestination(key, coordinates));\n}\nexport async function dispatchedAddedWall(key, coordinates = []) {\n  await store.dispatch(nodeDispatched.addedWall(key, coordinates));\n}\nexport async function dispatchedAddedWeight(key, coordinates = []) {\n  await store.dispatch(nodeDispatched.addedWeight(key, coordinates));\n}\nexport async function dispatchedMovedStart(coordinates = []) {\n  await store.dispatch(nodeDispatched.movedStart(coordinates));\n}\nexport async function dispatchedMovedEnd(coordinates = []) {\n  await store.dispatch(nodeDispatched.movedEnd(coordinates));\n}\nexport async function dispatchedRemovedAdditionalDestination(key) {\n  await store.dispatch(nodeDispatched.removedAdditionalDestination(key));\n}\nexport async function dispatchedRemovedWall(key) {\n  await store.dispatch(nodeDispatched.removedWall(key));\n}\nexport async function dispatchedRemovedWeight(key) {\n  await store.dispatch(nodeDispatched.removedWeight(key));\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/redux/dispatchs/node-dispatchs.js"],"names":["store","nodeDispatched","dispatchedAddedAdditionalDestination","key","coordinates","dispatch","addedAdditionalDestination","dispatchedAddedWall","addedWall","dispatchedAddedWeight","addedWeight","dispatchedMovedStart","movedStart","dispatchedMovedEnd","movedEnd","dispatchedRemovedAdditionalDestination","removedAdditionalDestination","dispatchedRemovedWall","removedWall","dispatchedRemovedWeight","removedWeight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAO,KAAKC,cAAZ,MAAgC,gDAAhC;AAEA,OAAO,eAAeC,oCAAf,CAAoDC,GAApD,EAAyDC,WAAW,GAAG,EAAvE,EAA2E;AAC9E,QAAMJ,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACK,0BAAf,CAA0CH,GAA1C,EAA+CC,WAA/C,CAAf,CAAN;AACH;AACD,OAAO,eAAeG,mBAAf,CAAmCJ,GAAnC,EAAwCC,WAAW,GAAG,EAAtD,EAA0D;AAC7D,QAAMJ,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACO,SAAf,CAAyBL,GAAzB,EAA8BC,WAA9B,CAAf,CAAN;AACH;AAED,OAAO,eAAeK,qBAAf,CAAqCN,GAArC,EAA0CC,WAAW,GAAG,EAAxD,EAA4D;AAC/D,QAAMJ,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACS,WAAf,CAA2BP,GAA3B,EAAgCC,WAAhC,CAAf,CAAN;AACH;AAGD,OAAO,eAAeO,oBAAf,CAAoCP,WAAW,GAAG,EAAlD,EAAsD;AACzD,QAAMJ,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACW,UAAf,CAA0BR,WAA1B,CAAf,CAAN;AACH;AAED,OAAO,eAAeS,kBAAf,CAAkCT,WAAW,GAAG,EAAhD,EAAoD;AACvD,QAAMJ,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACa,QAAf,CAAwBV,WAAxB,CAAf,CAAN;AACH;AAED,OAAO,eAAeW,sCAAf,CAAsDZ,GAAtD,EAA2D;AAC9D,QAAMH,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACe,4BAAf,CAA4Cb,GAA5C,CAAf,CAAN;AACH;AAED,OAAO,eAAec,qBAAf,CAAqCd,GAArC,EAA0C;AAC7C,QAAMH,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACiB,WAAf,CAA2Bf,GAA3B,CAAf,CAAN;AACH;AAED,OAAO,eAAegB,uBAAf,CAAuChB,GAAvC,EAA4C;AAC/C,QAAMH,KAAK,CAACK,QAAN,CAAeJ,cAAc,CAACmB,aAAf,CAA6BjB,GAA7B,CAAf,CAAN;AACH","sourcesContent":["import store from \"../stores/store\";\nimport * as nodeDispatched from \"../actions/action-creators/node-action-creator\"\n\nexport async function dispatchedAddedAdditionalDestination(key, coordinates = []) {\n    await store.dispatch(nodeDispatched.addedAdditionalDestination(key, coordinates));\n}\nexport async function dispatchedAddedWall(key, coordinates = []) {\n    await store.dispatch(nodeDispatched.addedWall(key, coordinates));\n}\n\nexport async function dispatchedAddedWeight(key, coordinates = []) {\n    await store.dispatch(nodeDispatched.addedWeight(key, coordinates));\n}\n\n\nexport async function dispatchedMovedStart(coordinates = []) {\n    await store.dispatch(nodeDispatched.movedStart(coordinates))\n}\n\nexport async function dispatchedMovedEnd(coordinates = []) {\n    await store.dispatch(nodeDispatched.movedEnd(coordinates))\n}\n\nexport async function dispatchedRemovedAdditionalDestination(key) {\n    await store.dispatch(nodeDispatched.removedAdditionalDestination(key));\n}\n\nexport async function dispatchedRemovedWall(key) {\n    await store.dispatch(nodeDispatched.removedWall(key));\n}\n\nexport async function dispatchedRemovedWeight(key) {\n    await store.dispatch(nodeDispatched.removedWeight(key));\n}\n\n\n"]},"metadata":{},"sourceType":"module"}