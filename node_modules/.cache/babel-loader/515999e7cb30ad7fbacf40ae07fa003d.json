{"ast":null,"code":"import _regeneratorRuntime from\"/home/steven/SWE/Code/path-finding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(checkNeighbors);export function checkNeighbors(){var node_location,visited,row,column,RIGHT,LEFT,UP,DOWN,_args=arguments;return _regeneratorRuntime.wrap(function checkNeighbors$(_context){while(1){switch(_context.prev=_context.next){case 0:node_location=_args.length>0&&_args[0]!==undefined?_args[0]:[];visited=_args.length>1&&_args[1]!==undefined?_args[1]:[[]];row=node_location[0];column=node_location[1];RIGHT=column+1;LEFT=column-1;UP=row-1;DOWN=row+1;if(!(UP>=0&&!visited[UP][column])){_context.next=11;break;}_context.next=11;return[UP,column];case 11:if(!(RIGHT>=0&&RIGHT<visited.length&&!visited[row][RIGHT])){_context.next=14;break;}_context.next=14;return[row,RIGHT];case 14:if(!(DOWN>=0&&DOWN<visited.length&&!visited[DOWN][column])){_context.next=17;break;}_context.next=17;return[DOWN,column];case 17:if(!(LEFT>=0&&!visited[row][LEFT])){_context.next=20;break;}_context.next=20;return[row,LEFT];case 20:case\"end\":return _context.stop();}}},_marked);}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/algorithms/helpers/matrix-helpers/async-helpers/check-neighbors.js"],"names":["checkNeighbors","node_location","visited","row","column","RIGHT","LEFT","UP","DOWN","length"],"mappings":"6MAAiBA,c,EAAjB,MAAO,SAAUA,CAAAA,cAAV,kMAAyBC,aAAzB,+CAAyC,EAAzC,CAA6CC,OAA7C,+CAAuD,CAAC,EAAD,CAAvD,CACCC,GADD,CACOF,aAAa,CAAC,CAAD,CADpB,CAECG,MAFD,CAEUH,aAAa,CAAC,CAAD,CAFvB,CAGGI,KAHH,CAGWD,MAAM,CAAG,CAHpB,CAIGE,IAJH,CAIUF,MAAM,CAAG,CAJnB,CAKGG,EALH,CAKQJ,GAAG,CAAG,CALd,CAMGK,IANH,CAMUL,GAAG,CAAG,CANhB,MASCI,EAAE,EAAI,CAAN,EAAW,CAACL,OAAO,CAACK,EAAD,CAAP,CAAYH,MAAZ,CATb,4CAUC,MAAM,CAACG,EAAD,CAAKH,MAAL,CAAN,CAVD,aAaCC,KAAK,EAAI,CAAT,EAAcA,KAAK,CAAGH,OAAO,CAACO,MAA9B,EAAwC,CAACP,OAAO,CAACC,GAAD,CAAP,CAAaE,KAAb,CAb1C,4CAcC,MAAM,CAACF,GAAD,CAAME,KAAN,CAAN,CAdD,aAgBCG,IAAI,EAAI,CAAR,EAAaA,IAAI,CAAGN,OAAO,CAACO,MAA5B,EAAsC,CAACP,OAAO,CAACM,IAAD,CAAP,CAAcJ,MAAd,CAhBxC,4CAiBC,MAAM,CAACI,IAAD,CAAOJ,MAAP,CAAN,CAjBD,aAoBCE,IAAI,EAAI,CAAR,EAAa,CAACJ,OAAO,CAACC,GAAD,CAAP,CAAaG,IAAb,CApBf,4CAqBC,MAAM,CAACH,GAAD,CAAMG,IAAN,CAAN,CArBD","sourcesContent":["export function* checkNeighbors(node_location = [], visited = [[]]) {\n    let row = node_location[0];\n    let column = node_location[1];\n    const RIGHT = column + 1;\n    const LEFT = column - 1;\n    const UP = row - 1;\n    const DOWN = row + 1;\n\n\n    if (UP >= 0 && !visited[UP][column]) {\n        yield [UP, column];\n    }\n\n    if (RIGHT >= 0 && RIGHT < visited.length && !visited[row][RIGHT]) {\n        yield [row, RIGHT];\n    }\n    if (DOWN >= 0 && DOWN < visited.length && !visited[DOWN][column]) {\n        yield [DOWN, column];\n    }\n\n    if (LEFT >= 0 && !visited[row][LEFT]) {\n        yield [row, LEFT];\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}