{"ast":null,"code":"var _jsxFileName = \"/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/instructions-page.js\";\nimport React, { Component } from 'react';\nimport Card from '../atoms/holders/card';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nlibrary.add(faCar);\nlibrary.add(faSquare);\nexport default class InstructionsPage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \"Path Finding Algorithm Visualizer\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"What is A Path Finding Algorithm?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Imagine you are a driver for a ride share company. You wouldn't want to be driving in circles trying to get to your final destination, right? You would waste so much time and gas! \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"This app shows an optimized path from getting from point A to point B.\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../images/pathfinding.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Meet The Algorithms\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Note: Some Algorithms are more efficient than others!\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, \"A* Search\"), \" (weighted): arguably the best algorithm; guarentee's the shortest path. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, \"Dijkstra's Algorithm\"), \" (weighted): the father of algorithms; It will guarentee the shortest path. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"Bredth First Search\"), \" (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, \"Depth First Search\"), \" (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Choose an algorithm (A* is chosen by default)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Add an Item to the Grid (If you want)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Press play!\")));\n  }\n\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/instructions-page.js"],"names":["React","Component","Card","library","faCar","faSquare","FontAwesomeIcon","add","InstructionsPage","render","require"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEAH,OAAO,CAACI,GAAR,CAAYH,KAAZ;AACAD,OAAO,CAACI,GAAR,CAAYF,QAAZ;AACA,eAAe,MAAMG,gBAAN,SAA+BP,SAA/B,CAAyC;AACpDQ,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8LAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAJJ,eAKI;AAAK,MAAA,GAAG,EAAEC,OAAO,CAAC,8BAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,8EATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAJ,iFAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAJ,iHAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAJ,4FAZJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHA,CAfJ,CADJ;AAuBH;;AAzBmD","sourcesContent":["import React, { Component } from 'react'\nimport Card from '../atoms/holders/card'\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nlibrary.add(faCar);\nlibrary.add(faSquare);\nexport default class InstructionsPage extends Component {\n    render() {\n        return (\n            <Card>\n                <h1>Path Finding Algorithm Visualizer</h1>\n                <h2>What is A Path Finding Algorithm?</h2>\n                <p>Imagine you are a driver for a ride share company. You wouldn't want to be driving in circles trying to get to your final destination, right? You would waste so much time and gas! </p>\n                <p>This app shows an optimized path from getting from point A to point B.</p>\n                <img src={require('../../images/pathfinding.png')}/>\n\n                <h2>Meet The Algorithms</h2>\n                <h3>Note: Some Algorithms are more efficient than others!</h3>\n                <ul><span>A* Search</span> (weighted): arguably the best algorithm; guarentee's the shortest path. </ul>\n                <ul><span>Dijkstra's Algorithm</span> (weighted): the father of algorithms; It will guarentee the shortest path. </ul>\n                <ul><span>Bredth First Search</span> (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. </ul>\n                <ul><span>Depth First Search</span> (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! </ul>\n\n                <h2>Getting Started</h2>\n                <ul>\n                <li>Choose an algorithm (A* is chosen by default)</li>\n                <li>Add an Item to the Grid (If you want)</li>\n                <li>Press play!</li>\n                </ul>\n            </Card>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}