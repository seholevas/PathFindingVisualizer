{"ast":null,"code":"import _regeneratorRuntime from\"/home/steven/SWE/Code/path-finding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/steven/SWE/Code/path-finding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/steven/SWE/Code/path-finding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import shallowCopy from\"../2d-array-functions/shallow-copy\";import{dispatchedChangedNodeType}from\"../../redux/dispatchs/grid-dispatchs\";import store from\"../../redux/stores/store\";import{dispatchedRemovedAdditionalDestination,dispatchedRemovedWeight,dispatchedRemovedWall,dispatchedMovedStart,dispatchedMovedEnd}from\"../../redux/dispatchs/node-dispatchs\";export function clearPath(){return _clearPath.apply(this,arguments);}function _clearPath(){_clearPath=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var start,end,grid,copy,i,j,node;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return store.getState().nodes.start_coordinates;case 2:start=_context.sent;_context.next=5;return store.getState().nodes.end_coordinates;case 5:end=_context.sent;_context.next=8;return store.getState().grid;case 8:grid=_context.sent;copy=shallowCopy(grid);for(i=0;i<copy.length;i++){for(j=0;j<copy.length;j++){node=copy[i][j];node[\"visited\"]=false;node[\"shortest_path\"]=false;copy[i][j]=node;}}_context.next=13;return dispatchedChangedNodeType(copy);case 13:_context.next=15;return dispatchedMovedStart(_toConsumableArray(start));case 15:_context.next=17;return dispatchedMovedEnd(_toConsumableArray(end));case 17:case\"end\":return _context.stop();}}},_callee);}));return _clearPath.apply(this,arguments);}export function clearAll(){return _clearAll.apply(this,arguments);}function _clearAll(){_clearAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var grid,copy,i,j,node,type;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return clearPath();case 2:grid=store.getState().grid;copy=shallowCopy(grid);i=0;case 5:if(!(i<copy.length)){_context2.next=30;break;}j=0;case 7:if(!(j<copy.length)){_context2.next=27;break;}node=copy[i][j];type=null;if(node['type']!==\"start_node\"&&node[\"type\"]!==\"end_node\"){type=node['type'];node={type:\"empty_node\",visited:false,shortest_path:false};copy[i][j]=node;}_context2.t0=type;_context2.next=_context2.t0===\"additional_destination_node\"?14:_context2.t0===\"weight_node\"?17:_context2.t0===\"wall_node\"?20:23;break;case 14:_context2.next=16;return dispatchedRemovedAdditionalDestination([i,j]);case 16:return _context2.abrupt(\"break\",24);case 17:_context2.next=19;return dispatchedRemovedWeight([i,j]);case 19:return _context2.abrupt(\"break\",24);case 20:_context2.next=22;return dispatchedRemovedWall([i,j]);case 22:return _context2.abrupt(\"break\",24);case 23:return _context2.abrupt(\"break\",24);case 24:j++;_context2.next=7;break;case 27:i++;_context2.next=5;break;case 30:_context2.next=32;return dispatchedChangedNodeType(copy);case 32:case\"end\":return _context2.stop();}}},_callee2);}));return _clearAll.apply(this,arguments);}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/helpers/state-functions/clear-matrix.js"],"names":["shallowCopy","dispatchedChangedNodeType","store","dispatchedRemovedAdditionalDestination","dispatchedRemovedWeight","dispatchedRemovedWall","dispatchedMovedStart","dispatchedMovedEnd","clearPath","getState","nodes","start_coordinates","start","end_coordinates","end","grid","copy","i","length","j","node","clearAll","type","visited","shortest_path"],"mappings":"ifAAA,MAAOA,CAAAA,WAAP,KAAwB,oCAAxB,CACA,OAASC,yBAAT,KAA0C,sCAA1C,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,OAASC,sCAAT,CAAiDC,uBAAjD,CAA0EC,qBAA1E,CAAiGC,oBAAjG,CAAuHC,kBAAvH,KAAiJ,sCAAjJ,CAEA,eAAsBC,CAAAA,SAAtB,4C,yFAAO,0LACiBN,CAAAA,KAAK,CAACO,QAAN,GAAiBC,KAAjB,CAAuBC,iBADxC,QACGC,KADH,qCAEeV,CAAAA,KAAK,CAACO,QAAN,GAAiBC,KAAjB,CAAuBG,eAFtC,QAEGC,GAFH,qCAGcZ,CAAAA,KAAK,CAACO,QAAN,GAAiBM,IAH/B,QAGCA,IAHD,eAICC,IAJD,CAIQhB,WAAW,CAACe,IAAD,CAJnB,CAMH,IAASE,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGD,IAAI,CAACE,MAAzB,CAAiCD,CAAC,EAAlC,CAAsC,CAClC,IAASE,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGH,IAAI,CAACE,MAAzB,CAAiCC,CAAC,EAAlC,CAAsC,CAC9BC,IAD8B,CACvBJ,IAAI,CAACC,CAAD,CAAJ,CAAQE,CAAR,CADuB,CAElCC,IAAI,CAAC,SAAD,CAAJ,CAAkB,KAAlB,CACAA,IAAI,CAAC,eAAD,CAAJ,CAAwB,KAAxB,CACAJ,IAAI,CAACC,CAAD,CAAJ,CAAQE,CAAR,EAAaC,IAAb,CAEH,CACJ,CAdE,uBAeGnB,CAAAA,yBAAyB,CAACe,IAAD,CAf5B,gCAgBGV,CAAAA,oBAAoB,oBAAKM,KAAL,EAhBvB,gCAiBGL,CAAAA,kBAAkB,oBAAKO,GAAL,EAjBrB,wD,4CAoBP,eAAsBO,CAAAA,QAAtB,2C,uFAAO,2LAEGb,CAAAA,SAAS,EAFZ,QAGCO,IAHD,CAGQb,KAAK,CAACO,QAAN,GAAiBM,IAHzB,CAICC,IAJD,CAIQhB,WAAW,CAACe,IAAD,CAJnB,CAKME,CALN,CAKU,CALV,aAKaA,CAAC,CAAGD,IAAI,CAACE,MALtB,4BAMUC,CANV,CAMc,CANd,aAMiBA,CAAC,CAAGH,IAAI,CAACE,MAN1B,4BAOSE,IAPT,CAOgBJ,IAAI,CAACC,CAAD,CAAJ,CAAQE,CAAR,CAPhB,CAQSG,IART,CAQgB,IARhB,CASK,GAAGF,IAAI,CAAC,MAAD,CAAJ,GAAiB,YAAjB,EAAiCA,IAAI,CAAC,MAAD,CAAJ,GAAiB,UAArD,CACA,CACGE,IAAI,CAAGF,IAAI,CAAC,MAAD,CAAX,CACAA,IAAI,CAAG,CAAEE,IAAI,CAAE,YAAR,CAAsBC,OAAO,CAAE,KAA/B,CAAsCC,aAAa,CAAE,KAArD,CAAP,CACAR,IAAI,CAACC,CAAD,CAAJ,CAAQE,CAAR,EAAaC,IAAb,CACF,CAdN,aAgBYE,IAhBZ,+BAkBc,6BAlBd,mBAqBc,aArBd,mBAwBc,WAxBd,6CAmBmBnB,CAAAA,sCAAsC,CAAC,CAACc,CAAD,CAAGE,CAAH,CAAD,CAnBzD,6EAsBmBf,CAAAA,uBAAuB,CAAC,CAACa,CAAD,CAAGE,CAAH,CAAD,CAtB1C,6EAyBmBd,CAAAA,qBAAqB,CAAC,CAACY,CAAD,CAAGE,CAAH,CAAD,CAzBxC,iGAMkCA,CAAC,EANnC,gCAK8BF,CAAC,EAL/B,wDAmCGhB,CAAAA,yBAAyB,CAACe,IAAD,CAnC5B,0D","sourcesContent":["import shallowCopy from \"../2d-array-functions/shallow-copy\";\nimport { dispatchedChangedNodeType } from \"../../redux/dispatchs/grid-dispatchs\";\nimport store from \"../../redux/stores/store\";\nimport { dispatchedRemovedAdditionalDestination, dispatchedRemovedWeight, dispatchedRemovedWall, dispatchedMovedStart, dispatchedMovedEnd } from \"../../redux/dispatchs/node-dispatchs\";\n\nexport async function clearPath() {\n    const start = await store.getState().nodes.start_coordinates;\n    const end = await store.getState().nodes.end_coordinates;\n    let grid = await store.getState().grid;\n    let copy = shallowCopy(grid);\n\n    for (let i = 0; i < copy.length; i++) {\n        for (let j = 0; j < copy.length; j++) {\n            let node = copy[i][j]\n            node[\"visited\"] = false;\n            node[\"shortest_path\"] = false;\n            copy[i][j] = node;\n\n        }\n    }\n    await dispatchedChangedNodeType(copy);\n    await dispatchedMovedStart([...start]);\n    await dispatchedMovedEnd([...end])\n}\n\nexport async function clearAll()\n{\n    await clearPath();\n    let grid = store.getState().grid;\n    let copy = shallowCopy(grid);\n    for (let i = 0; i < copy.length; i++) {\n        for (let j = 0; j < copy.length; j++) {\n            let node = copy[i][j]\n            var type = null;\n            if(node['type'] !== \"start_node\" && node[\"type\"] !== \"end_node\")\n            {\n               type = node['type']\n               node = { type: \"empty_node\", visited: false, shortest_path: false} \n               copy[i][j] = node;\n            }\n\n            switch(type)\n            {\n                case \"additional_destination_node\":\n                    await dispatchedRemovedAdditionalDestination([i,j]);\n                    break;\n                case \"weight_node\":\n                    await dispatchedRemovedWeight([i,j]);\n                    break;\n                case \"wall_node\":\n                    await dispatchedRemovedWall([i,j]);\n                    break;\n                default:\n                    break;\n            }\n\n        }\n        \n    }\n\n    await dispatchedChangedNodeType(copy);\n}"]},"metadata":{},"sourceType":"module"}