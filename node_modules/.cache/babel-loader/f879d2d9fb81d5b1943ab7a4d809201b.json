{"ast":null,"code":"function getSort(array = [], type = \"mergesort\") {\n  if (type === \"a*\") {\n    return Merge(array);\n  } else if (type === \"bfs\") {\n    return BubbleSort(array);\n  } else if (type === \"dfs\") {\n    return SelectionSort(array);\n  } else if (type === \"dijkstra\") {\n    return heapSort(array);\n  } else if (type === \"insertionsort\") {\n    return InsertionSort(array);\n  } else if (type === \"quicksort\") {\n    return QuickSort(array, 0, array.length - 1);\n  } else if (type === \"cocktailsort\") {}\n}\n\nexport default function startPathFinding() {\n  console.log(\"finding path!\");\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/algorithms/pathfind.js"],"names":["getSort","array","type","Merge","BubbleSort","SelectionSort","heapSort","InsertionSort","QuickSort","length","startPathFinding","console","log"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,KAAK,GAAG,EAAzB,EAA6BC,IAAI,GAAG,WAApC,EAAiD;AAC7C,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,WAAOC,KAAK,CAACF,KAAD,CAAZ;AACH,GAFD,MAGK,IAAIC,IAAI,KAAK,KAAb,EAAoB;AACrB,WAAOE,UAAU,CAACH,KAAD,CAAjB;AACH,GAFI,MAGA,IAAIC,IAAI,KAAK,KAAb,EAAoB;AACrB,WAAOG,aAAa,CAACJ,KAAD,CAApB;AACH,GAFI,MAGA,IAAIC,IAAI,KAAK,UAAb,EAAyB;AAC1B,WAAOI,QAAQ,CAACL,KAAD,CAAf;AACH,GAFI,MAGA,IAAIC,IAAI,KAAK,eAAb,EAA8B;AAC/B,WAAOK,aAAa,CAACN,KAAD,CAApB;AACH,GAFI,MAGA,IAAIC,IAAI,KAAK,WAAb,EAA0B;AAC3B,WAAOM,SAAS,CAACP,KAAD,EAAQ,CAAR,EAAWA,KAAK,CAACQ,MAAN,GAAe,CAA1B,CAAhB;AACH,GAFI,MAGA,IAAIP,IAAI,KAAK,cAAb,EAA6B,CAEjC;AACJ;;AAED,eAAe,SAASQ,gBAAT,GAA4B;AAEvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH","sourcesContent":["function getSort(array = [], type = \"mergesort\") {\n    if (type === \"a*\") {\n        return Merge(array);\n    }\n    else if (type === \"bfs\") {\n        return BubbleSort(array);\n    }\n    else if (type === \"dfs\") {\n        return SelectionSort(array);\n    }\n    else if (type === \"dijkstra\") {\n        return heapSort(array)\n    }\n    else if (type === \"insertionsort\") {\n        return InsertionSort(array);\n    }\n    else if (type === \"quicksort\") {\n        return QuickSort(array, 0, array.length - 1);\n    }\n    else if (type === \"cocktailsort\") {\n\n    }\n}\n\nexport default function startPathFinding() {\n\n    console.log(\"finding path!\");\n}"]},"metadata":{},"sourceType":"module"}