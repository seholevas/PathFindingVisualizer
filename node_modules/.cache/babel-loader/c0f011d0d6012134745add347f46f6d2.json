{"ast":null,"code":"var _jsxFileName = \"/home/steven/SWE/Code/path-finding-visualizer/src/react/atoms/nodes/empty-node.js\";\nimport React from 'react';\nimport { BaseNode } from \"./abstraction/base-node\";\nimport updateWeight from '../../../helpers/dom-helpers/update-weight'; // import \"../../../css/node.css\"\n\nexport const EmptyNode = ({\n  className,\n  onClick,\n  ...props\n}) =>\n/*#__PURE__*/\n// onClick={onClick}\n// onClick={(event)=>{updateWeight(event.target.id); console.log(\"changed to weight node!: \", event.target.id);}} onDoubleClick={()=>{console.log(\"changed to additional destination node!\")}} onMouseDown={()=> {console.log(\"mouse down!\")}} onMouseMove={()=>{console.log(\"mouse moved!\")}} onMouseUp={()=>{console.log(\"mouse up!\")}}\nReact.createElement(BaseNode, Object.assign({\n  className: \"node node-empty \" + className,\n  onClick: onClick\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/react/atoms/nodes/empty-node.js"],"names":["React","BaseNode","updateWeight","EmptyNode","className","onClick","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,4CAAzB,C,CACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACtBC,EAAAA,SADsB;AAEtBC,EAAAA,OAFsB;AAGtB,KAAGC;AAHmB,CAAD;AAAA;AAKrB;AACA;AACA,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAE,qBAAqBF,SAA1C;AAAqD,EAAA,OAAO,EAAEC;AAA9D,GAA2EC,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPG","sourcesContent":["import React from 'react';\nimport {BaseNode} from \"./abstraction/base-node\"\nimport updateWeight from '../../../helpers/dom-helpers/update-weight';\n// import \"../../../css/node.css\"\n\nexport const EmptyNode = ({\n    className,\n    onClick,\n    ...props\n}) =>(\n    // onClick={onClick}\n    // onClick={(event)=>{updateWeight(event.target.id); console.log(\"changed to weight node!: \", event.target.id);}} onDoubleClick={()=>{console.log(\"changed to additional destination node!\")}} onMouseDown={()=> {console.log(\"mouse down!\")}} onMouseMove={()=>{console.log(\"mouse moved!\")}} onMouseUp={()=>{console.log(\"mouse up!\")}}\n    <BaseNode className={\"node node-empty \" + className} onClick={onClick} {...props}>\n    </BaseNode>\n)"]},"metadata":{},"sourceType":"module"}