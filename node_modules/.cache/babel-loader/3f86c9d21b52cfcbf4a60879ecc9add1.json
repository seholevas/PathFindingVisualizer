{"ast":null,"code":"var _jsxFileName = \"/home/steven/SWE/Code/path-finding-visualizer/src/react/atoms/nodes/empty-node.js\";\nimport React from 'react';\nimport { BaseNode } from \"./abstraction/base-node\"; // import \"../../../css/node.css\"\n\nexport const EmptyNode = ({\n  className,\n  // onClick,\n  ...props\n}) =>\n/*#__PURE__*/\n// onClick={onClick}\nReact.createElement(BaseNode, Object.assign({\n  className: \"node node-empty \" + className,\n  onClick: event => {\n    console.log(\"changed to weight node!: \", event.target.id);\n  },\n  onDoubleClick: () => {\n    console.log(\"changed to additional destination node!\");\n  },\n  onMouseDown: () => {\n    console.log(\"mouse down!\");\n  },\n  onMouseMove: () => {\n    console.log(\"mouse moved!\");\n  },\n  onMouseUp: () => {\n    console.log(\"mouse up!\");\n  }\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/react/atoms/nodes/empty-node.js"],"names":["React","BaseNode","EmptyNode","className","props","event","console","log","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,yBAAvB,C,CACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACtBC,EAAAA,SADsB;AAEtB;AACA,KAAGC;AAHmB,CAAD;AAAA;AAKrB;AACA,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAE,qBAAqBD,SAA1C;AAAqD,EAAA,OAAO,EAAGE,KAAD,IAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAK,CAACG,MAAN,CAAaC,EAAtD;AAA2D,GAAnI;AAAqI,EAAA,aAAa,EAAE,MAAI;AAACH,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AAAuD,GAAhN;AAAkN,EAAA,WAAW,EAAE,MAAK;AAACD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA2B,GAAhQ;AAAkQ,EAAA,WAAW,EAAE,MAAI;AAACD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA4B,GAAhT;AAAkT,EAAA,SAAS,EAAE,MAAI;AAACD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAAyB;AAA3V,GAAiWH,KAAjW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANG","sourcesContent":["import React from 'react';\nimport {BaseNode} from \"./abstraction/base-node\"\n// import \"../../../css/node.css\"\n\nexport const EmptyNode = ({\n    className,\n    // onClick,\n    ...props\n}) =>(\n    // onClick={onClick}\n    <BaseNode className={\"node node-empty \" + className} onClick={(event)=>{console.log(\"changed to weight node!: \", event.target.id )}} onDoubleClick={()=>{console.log(\"changed to additional destination node!\")}} onMouseDown={()=> {console.log(\"mouse down!\")}} onMouseMove={()=>{console.log(\"mouse moved!\")}} onMouseUp={()=>{console.log(\"mouse up!\")}} {...props}>\n    </BaseNode>\n)"]},"metadata":{},"sourceType":"module"}