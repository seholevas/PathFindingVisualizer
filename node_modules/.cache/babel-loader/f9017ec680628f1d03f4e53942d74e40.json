{"ast":null,"code":"import shallowCopy from \"../2d-array-functions/shallow-copy\"; // export default function updateNodeState(coordinates=[], matrix = [[]])\n// {\n//     let node = matrix[coordinates[0]][coordinates[1]];\n//     if(!node[\"visited\"])\n//     {\n//         node[\"visited\"] = true\n//     }\n//     else if (!node[\"shortest_path\"] && node[\"visited\"])\n//     {\n//         // node[\"visited\"] = false;\n//         node[\"shortest_path\"] = true;\n//     }\n//     matrix[coordinates[0]][coordinates[1]] = node;\n//     return shallowCopy(matrix);\n// }\n\nexport function changeNodeToVisited(coordinates = [], matrix = [[]]) {\n  let node = matrix[coordinates[0]][coordinates[1]];\n\n  if (!node[\"shortest_path\"]) {\n    node[\"visited\"] = true;\n  }\n\n  var flicker_element = document.getElementById(coordinates[0] + \"-\" + coordinates[1]);\n  flicker_element.classList.add(\"flicker\");\n  matrix[coordinates[0]][coordinates[1]] = node;\n  return shallowCopy(matrix);\n}\nexport function changeNodeToShortestPath(coordinates = [], matrix = [[]]) {\n  let node = matrix[coordinates[0]][coordinates[1]];\n\n  if (!node[\"shortest_path\"]) {\n    node[\"shortest_path\"] = true;\n  }\n\n  matrix[coordinates[0]][coordinates[1]] = node;\n  return shallowCopy(matrix);\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/helpers/state-functions/update-node-state.js"],"names":["shallowCopy","changeNodeToVisited","coordinates","matrix","node","flicker_element","document","getElementById","classList","add","changeNodeToShortestPath"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oCAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,SAASC,mBAAT,CAA6BC,WAAW,GAAG,EAA3C,EAA+CC,MAAM,GAAG,CAAC,EAAD,CAAxD,EACP;AACI,MAAIC,IAAI,GAAGD,MAAM,CAACD,WAAW,CAAC,CAAD,CAAZ,CAAN,CAAuBA,WAAW,CAAC,CAAD,CAAlC,CAAX;;AACA,MAAG,CAACE,IAAI,CAAC,eAAD,CAAR,EACA;AACIA,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,IAAlB;AACH;;AAED,MAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwBL,WAAW,CAAC,CAAD,CAAX,GAAe,GAAf,GAAmBA,WAAW,CAAC,CAAD,CAAtD,CAAtB;AACAG,EAAAA,eAAe,CAACG,SAAhB,CAA0BC,GAA1B,CAA8B,SAA9B;AAEAN,EAAAA,MAAM,CAACD,WAAW,CAAC,CAAD,CAAZ,CAAN,CAAuBA,WAAW,CAAC,CAAD,CAAlC,IAAyCE,IAAzC;AACA,SAAOJ,WAAW,CAACG,MAAD,CAAlB;AACH;AAED,OAAO,SAASO,wBAAT,CAAkCR,WAAW,GAAG,EAAhD,EAAoDC,MAAM,GAAG,CAAC,EAAD,CAA7D,EACP;AACI,MAAIC,IAAI,GAAGD,MAAM,CAACD,WAAW,CAAC,CAAD,CAAZ,CAAN,CAAuBA,WAAW,CAAC,CAAD,CAAlC,CAAX;;AACA,MAAG,CAACE,IAAI,CAAC,eAAD,CAAR,EACA;AACIA,IAAAA,IAAI,CAAC,eAAD,CAAJ,GAAwB,IAAxB;AACH;;AAEDD,EAAAA,MAAM,CAACD,WAAW,CAAC,CAAD,CAAZ,CAAN,CAAuBA,WAAW,CAAC,CAAD,CAAlC,IAAyCE,IAAzC;AACA,SAAOJ,WAAW,CAACG,MAAD,CAAlB;AACH","sourcesContent":["import shallowCopy from \"../2d-array-functions/shallow-copy\";\n// export default function updateNodeState(coordinates=[], matrix = [[]])\n// {\n//     let node = matrix[coordinates[0]][coordinates[1]];\n//     if(!node[\"visited\"])\n//     {\n//         node[\"visited\"] = true\n//     }\n//     else if (!node[\"shortest_path\"] && node[\"visited\"])\n//     {\n//         // node[\"visited\"] = false;\n//         node[\"shortest_path\"] = true;\n//     }\n\n//     matrix[coordinates[0]][coordinates[1]] = node;\n//     return shallowCopy(matrix);\n// }\n\nexport function changeNodeToVisited(coordinates = [], matrix = [[]])\n{\n    let node = matrix[coordinates[0]][coordinates[1]]\n    if(!node[\"shortest_path\"])\n    {\n        node[\"visited\"] = true;\n    }\n\n    var flicker_element = document.getElementById(coordinates[0]+\"-\"+coordinates[1]);\n    flicker_element.classList.add(\"flicker\");\n\n    matrix[coordinates[0]][coordinates[1]] = node;\n    return shallowCopy(matrix);\n}\n\nexport function changeNodeToShortestPath(coordinates = [], matrix = [[]])\n{\n    let node = matrix[coordinates[0]][coordinates[1]]\n    if(!node[\"shortest_path\"])\n    {\n        node[\"shortest_path\"] = true;\n    }\n\n    matrix[coordinates[0]][coordinates[1]] = node;\n    return shallowCopy(matrix);\n}"]},"metadata":{},"sourceType":"module"}