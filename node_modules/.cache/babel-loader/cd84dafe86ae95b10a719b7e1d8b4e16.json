{"ast":null,"code":"import _regeneratorRuntime from\"/home/steven/SWE/Code/path-finding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/steven/SWE/Code/path-finding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getValueByElementId}from\"../functions/get-value-by-element-id\";import generateMatrix from\"../2d-array-functions/generate-matrix\";import{dispatchedChangedMatrixSize}from\"../../redux/dispatchs/grid-dispatchs\";import shallowCopy from\"../2d-array-functions/shallow-copy\";import store from\"../../redux/stores/store\";import{dispatchedMovedEnd,dispatchedMovedStart}from\"../../redux/dispatchs/node-dispatchs\";import{clearPath,clearAll}from\"./clear-matrix\";export function changeArraySize(){return _changeArraySize.apply(this,arguments);}function _changeArraySize(){_changeArraySize=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var size_of_matrix,matrix,shallow_copy,start,end;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:size_of_matrix=getValueByElementId(\"size\");matrix=generateMatrix(size_of_matrix);shallow_copy=shallowCopy(matrix);_context.next=5;return store.getState().nodes.start_coordinates;case 5:start=_context.sent;_context.next=8;return store.getState().nodes.end_coordinates;case 8:end=_context.sent;// const grid_size = await store.getState().grid.length;\nif(start[0]<size_of_matrix-1&&start[1]<size_of_matrix-1){shallow_copy[start[0]][start[1]]={type:\"start_node\",visited:false,shortest_path:false};}else{dispatchedMovedStart([size_of_matrix-3,size_of_matrix-3]);shallow_copy[size_of_matrix-3][size_of_matrix-3]={type:\"start_node\",visited:false,shortest_path:false};}if(end[0]<size_of_matrix-1&&end[1]<size_of_matrix-1){shallow_copy[end[0]][end[1]]={type:\"end_node\",visited:false,shortest_path:false};}else{dispatchedMovedEnd([size_of_matrix-1,size_of_matrix-1]);shallow_copy[size_of_matrix-1][size_of_matrix-1]={type:\"end_node\",visited:false,shortest_path:false};}clearPath();clearAll();dispatchedChangedMatrixSize(shallow_copy);case 14:case\"end\":return _context.stop();}}},_callee);}));return _changeArraySize.apply(this,arguments);}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/helpers/state-functions/change-array-size.js"],"names":["getValueByElementId","generateMatrix","dispatchedChangedMatrixSize","shallowCopy","store","dispatchedMovedEnd","dispatchedMovedStart","clearPath","clearAll","changeArraySize","size_of_matrix","matrix","shallow_copy","getState","nodes","start_coordinates","start","end_coordinates","end","type","visited","shortest_path"],"mappings":"qUAAA,OAASA,mBAAT,KAAoC,sCAApC,CACA,MAAOC,CAAAA,cAAP,KAA2B,uCAA3B,CACA,OAAQC,2BAAR,KAA0C,sCAA1C,CACA,MAAOC,CAAAA,WAAP,KAAwB,oCAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,OAAQC,kBAAR,CAA4BC,oBAA5B,KAAwD,sCAAxD,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,gBAApC,CAEA,eAAsBC,CAAAA,eAAtB,kD,qGAAO,oLAEGC,cAFH,CAEoBV,mBAAmB,CAAC,MAAD,CAFvC,CAGGW,MAHH,CAGYV,cAAc,CAACS,cAAD,CAH1B,CAIGE,YAJH,CAIkBT,WAAW,CAACQ,MAAD,CAJ7B,uBAKiBP,CAAAA,KAAK,CAACS,QAAN,GAAiBC,KAAjB,CAAuBC,iBALxC,QAKGC,KALH,qCAMeZ,CAAAA,KAAK,CAACS,QAAN,GAAiBC,KAAjB,CAAuBG,eANtC,QAMGC,GANH,eAOH;AAEA,GAAKF,KAAK,CAAC,CAAD,CAAL,CAAWN,cAAc,CAAC,CAA3B,EAAkCM,KAAK,CAAC,CAAD,CAAL,CAAWN,cAAc,CAAC,CAAhE,CAAoE,CAChEE,YAAY,CAACI,KAAK,CAAC,CAAD,CAAN,CAAZ,CAAuBA,KAAK,CAAC,CAAD,CAA5B,EAAmC,CAAEG,IAAI,CAAE,YAAR,CAAsBC,OAAO,CAAE,KAA/B,CAAsCC,aAAa,CAAE,KAArD,CAAnC,CACH,CAFD,IAGK,CACDf,oBAAoB,CAAC,CAACI,cAAc,CAAC,CAAhB,CAAmBA,cAAc,CAAC,CAAlC,CAAD,CAApB,CACAE,YAAY,CAACF,cAAc,CAAC,CAAhB,CAAZ,CAA+BA,cAAc,CAAC,CAA9C,EAAmD,CAAES,IAAI,CAAE,YAAR,CAAsBC,OAAO,CAAE,KAA/B,CAAsCC,aAAa,CAAE,KAArD,CAAnD,CACH,CACD,GAAIH,GAAG,CAAC,CAAD,CAAH,CAASR,cAAc,CAAC,CAAxB,EAA6BQ,GAAG,CAAC,CAAD,CAAH,CAASR,cAAc,CAAC,CAAzD,CAA4D,CACxDE,YAAY,CAACM,GAAG,CAAC,CAAD,CAAJ,CAAZ,CAAqBA,GAAG,CAAC,CAAD,CAAxB,EAA+B,CAAEC,IAAI,CAAE,UAAR,CAAoBC,OAAO,CAAE,KAA7B,CAAoCC,aAAa,CAAE,KAAnD,CAA/B,CACH,CAFD,IAGK,CACDhB,kBAAkB,CAAC,CAACK,cAAc,CAAC,CAAhB,CAAmBA,cAAc,CAAC,CAAlC,CAAD,CAAlB,CACAE,YAAY,CAACF,cAAc,CAAC,CAAhB,CAAZ,CAA+BA,cAAc,CAAC,CAA9C,EAAmD,CAAES,IAAI,CAAE,UAAR,CAAoBC,OAAO,CAAE,KAA7B,CAAoCC,aAAa,CAAE,KAAnD,CAAnD,CAEH,CAQDd,SAAS,GACTC,QAAQ,GACRN,2BAA2B,CAACU,YAAD,CAA3B,CAjCG,uD","sourcesContent":["import { getValueByElementId } from \"../functions/get-value-by-element-id\";\nimport generateMatrix from \"../2d-array-functions/generate-matrix\";\nimport {dispatchedChangedMatrixSize} from \"../../redux/dispatchs/grid-dispatchs\";\nimport shallowCopy from \"../2d-array-functions/shallow-copy\";\nimport store from \"../../redux/stores/store\";\nimport {dispatchedMovedEnd, dispatchedMovedStart } from \"../../redux/dispatchs/node-dispatchs\";\nimport { clearPath, clearAll } from \"./clear-matrix\";\n\nexport async function changeArraySize()\n{\n    const size_of_matrix = getValueByElementId(\"size\");\n    const matrix = generateMatrix(size_of_matrix);\n    const shallow_copy = shallowCopy(matrix);\n    const start = await store.getState().nodes.start_coordinates;\n    const end = await store.getState().nodes.end_coordinates;\n    // const grid_size = await store.getState().grid.length;\n\n    if ((start[0] < size_of_matrix-1) && (start[1] < size_of_matrix-1)) {\n        shallow_copy[start[0]][start[1]] = { type: \"start_node\", visited: false, shortest_path: false };\n    }\n    else {\n        dispatchedMovedStart([size_of_matrix-3, size_of_matrix-3])\n        shallow_copy[size_of_matrix-3][size_of_matrix-3] = { type: \"start_node\", visited: false, shortest_path: false };\n    }\n    if (end[0] < size_of_matrix-1 && end[1] < size_of_matrix-1) {\n        shallow_copy[end[0]][end[1]] = { type: \"end_node\", visited: false, shortest_path: false };\n    }\n    else {\n        dispatchedMovedEnd([size_of_matrix-1, size_of_matrix-1])\n        shallow_copy[size_of_matrix-1][size_of_matrix-1] = { type: \"end_node\", visited: false, shortest_path: false };\n        \n    }\n  \n    \n\n\n\n\n\n    clearPath();\n    clearAll();\n    dispatchedChangedMatrixSize(shallow_copy);\n}\n"]},"metadata":{},"sourceType":"module"}