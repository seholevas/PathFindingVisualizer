{"ast":null,"code":"var _jsxFileName = \"/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/path-finding-instructions-page.js\";\nimport React, { Component } from 'react';\nimport Card from '../atoms/holders/card';\nimport MasterCTA from '../atoms/controls/call-to-actions/abstractions/master-call-to-action';\nimport \"../../css/text.css\";\nimport \"../../css/image.css\";\nimport \"../../css/grid.css\";\nimport \"../../css/flex.css\";\nexport default class PathFindingInstructionsPage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }, \"Path Finding Algorithm Visualizer\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, \"What is a path finding algorithm?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row img center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../images/pathfinding.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 60\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, \"Imagine you are a driver at a ride-share company who is requested to pick someone up. You wouldn't want to be driving in circles trying to get there, would you? You would waste so much time and gas! That is where path finding algorithms come into play. At its core, a pathfinding algorithm seeks to find the shortest path between two points. This application visualizes various pathfinding algorithms in action, and more!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      onClick: async () => {\n        await this.props.history.push(\"/Play\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      onClick: async () => {\n        await this.props.history.push(\"/Algorithms\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Next\")));\n  }\n\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/path-finding-instructions-page.js"],"names":["React","Component","Card","MasterCTA","PathFindingInstructionsPage","render","require","props","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,sEAAtB;AACA,OAAO,oBAAP;AACA,OAAO,qBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AAIA,eAAe,MAAMC,2BAAN,SAA0CH,SAA1C,CAAoD;AAC/DI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CADR,eAKQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CALR,eAQQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAK,MAAA,GAAG,EAAEC,OAAO,CAAC,8BAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CARR,eASQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+aADJ,CATR,eAsBQ;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,QAAjB;AAA2B,MAAA,OAAO,EAAE,YAAU;AAAC,cAAM,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB,CAAN;AAAyC,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,QAAjB;AAA2B,MAAA,OAAO,EAAE,YAAU;AAAC,cAAM,KAAKF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB,CAAN;AAA6C,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAtBR,CADJ;AA8BH;;AAhC8D","sourcesContent":["import React, { Component } from 'react'\nimport Card from '../atoms/holders/card'\nimport MasterCTA from '../atoms/controls/call-to-actions/abstractions/master-call-to-action';\nimport \"../../css/text.css\"\nimport \"../../css/image.css\"\nimport \"../../css/grid.css\"\nimport \"../../css/flex.css\"\n\n\n\nexport default class PathFindingInstructionsPage extends Component {\n    render() {\n        return (\n            <Card className={\"grid\"}>\n                    <div className={\"flex row text-block\"}>\n                        <h1>Path Finding Algorithm Visualizer</h1>\n                    </div>\n\n                    <div className={\"flex row text-block\"}>\n                        <h2>What is a path finding algorithm?</h2>\n                    </div>\n                    <div className={\"flex row img center\"}><img src={require('../../images/pathfinding.png')} /></div>\n                    <div className={\"flex row text-block\"}>\n                        <p>Imagine you are a driver at a ride-share company who is requested to pick someone up. You wouldn't want to be driving in circles trying to get there, would you? You would waste so much time and gas! That is where path finding algorithms come into play. At its core, a pathfinding algorithm seeks to find the shortest path between two points. This application visualizes various pathfinding algorithms in action, and more!</p>\n                    </div>\n                    {/* \n                    <div className={\"text text-block\"}>\n                    <h2>Meet the algorithms</h2>\n                    <h3>Some Algorithms are more efficient than others!</h3>\n                    <ul><span>A* Search</span> (weighted): arguably the best algorithm; guarentee's the shortest path. </ul>\n                    <ul><span>Dijkstra's Algorithm</span> (weighted): the father of algorithms; It will guarentee the shortest path. </ul>\n                    <ul><span>Bredth First Search</span> (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. </ul>\n                    <ul><span>Depth First Search</span> (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! </ul>\n                    </div> */}\n\n                    <div className={\"flex row\"}>\n                        <MasterCTA type={\"button\"} onClick={async ()=>{await this.props.history.push(\"/Play\"); }}>Skip</MasterCTA>\n                        <MasterCTA type={\"button\"}>Previous</MasterCTA>\n                        <MasterCTA type={\"button\"} onClick={async ()=>{await this.props.history.push(\"/Algorithms\")}}>Next</MasterCTA>\n                    </div>\n            </Card>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}