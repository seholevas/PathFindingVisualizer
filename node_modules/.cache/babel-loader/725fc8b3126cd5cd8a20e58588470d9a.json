{"ast":null,"code":"import * as nodeActions from \"../actions/types/node-types\";\nconst INITIAL_STATE = {\n  start_coordinates: [2, 2],\n  end_coordinates: [3, 3],\n  additional_destination_coordinates: [[]],\n  wall_coordinates: [],\n  weight_coordinates: [[]]\n};\nexport default function reducer(state = INITIAL_STATE, action) {\n  if (action.type === nodeActions.MOVED_START) {\n    return { ...state,\n      start_coordinates: action.payload.start_coordinates\n    };\n  }\n\n  if (action.type === nodeActions.MOVED_END) {\n    return { ...state,\n      end_coordinates: action.payload.end_coordinates\n    };\n  }\n\n  if (action.type === nodeActions.ADDED_WALL) {\n    // console.log(\"wall_coordinates: \", action.payload.added_wall_coordinates, \"state \",...state.wall_coordinates].push(action.payload.added_wall_coordinates))\n    return { ...state,\n      wall_coordinates: [...state.wall_coordinates, action.payload.added_wall_coordinates]\n    };\n  }\n\n  if (action.type === nodeActions.REMOVED_WALL) {\n    return { ...state,\n      wall_coordinates: [...state.wall_coordinates.filter(coordinates => coordinates[0] != action.payload.removed_wall_coordinates[0] && coordinates[1] != action.payload.removed_wall_coordinates[1])]\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/redux/reducers/node-reducer.js"],"names":["nodeActions","INITIAL_STATE","start_coordinates","end_coordinates","additional_destination_coordinates","wall_coordinates","weight_coordinates","reducer","state","action","type","MOVED_START","payload","MOVED_END","ADDED_WALL","added_wall_coordinates","REMOVED_WALL","filter","coordinates","removed_wall_coordinates"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,CAAJ,CADD;AAElBC,EAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFC;AAGlBC,EAAAA,kCAAkC,EAAE,CAAC,EAAD,CAHlB;AAIlBC,EAAAA,gBAAgB,EAAE,EAJA;AAKlBC,EAAAA,kBAAkB,EAAE,CAAC,EAAD;AALF,CAAtB;AASA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGP,aAAzB,EAAwCQ,MAAxC,EAAgD;AAE3D,MAAIA,MAAM,CAACC,IAAP,KAAgBV,WAAW,CAACW,WAAhC,EAA6C;AACzC,WAAO,EAAE,GAAGH,KAAL;AAAYN,MAAAA,iBAAiB,EAAEO,MAAM,CAACG,OAAP,CAAeV;AAA9C,KAAP;AACH;;AACD,MAAIO,MAAM,CAACC,IAAP,KAAgBV,WAAW,CAACa,SAAhC,EAA2C;AACvC,WAAO,EAAE,GAAGL,KAAL;AAAYL,MAAAA,eAAe,EAAEM,MAAM,CAACG,OAAP,CAAeT;AAA5C,KAAP;AACH;;AAED,MAAIM,MAAM,CAACC,IAAP,KAAgBV,WAAW,CAACc,UAAhC,EAA4C;AACxC;AACA,WAAO,EAAE,GAAGN,KAAL;AAAYH,MAAAA,gBAAgB,EAAE,CAAC,GAAGG,KAAK,CAACH,gBAAV,EAA4BI,MAAM,CAACG,OAAP,CAAeG,sBAA3C;AAA9B,KAAP;AACH;;AAED,MAAIN,MAAM,CAACC,IAAP,KAAgBV,WAAW,CAACgB,YAAhC,EAA8C;AAC1C,WAAO,EACH,GAAGR,KADA;AACOH,MAAAA,gBAAgB,EAAE,CAAC,GAAGG,KAAK,CAACH,gBAAN,CAAuBY,MAAvB,CAC3BC,WAAD,IACKA,WAAW,CAAC,CAAD,CAAX,IAAkBT,MAAM,CAACG,OAAP,CAAeO,wBAAf,CAAwC,CAAxC,CAAnB,IACID,WAAW,CAAC,CAAD,CAAX,IAAkBT,MAAM,CAACG,OAAP,CAAeO,wBAAf,CAAwC,CAAxC,CAHE,CAAJ;AADzB,KAAP;AAMH;;AACD,SAAOX,KAAP;AACH","sourcesContent":["import * as nodeActions from \"../actions/types/node-types\";\n\nconst INITIAL_STATE = {\n    start_coordinates: [2, 2],\n    end_coordinates: [3, 3],\n    additional_destination_coordinates: [[]],\n    wall_coordinates: [],\n    weight_coordinates: [[]],\n\n}\n\nexport default function reducer(state = INITIAL_STATE, action) {\n\n    if (action.type === nodeActions.MOVED_START) {\n        return { ...state, start_coordinates: action.payload.start_coordinates }\n    }\n    if (action.type === nodeActions.MOVED_END) {\n        return { ...state, end_coordinates: action.payload.end_coordinates };\n    }\n\n    if (action.type === nodeActions.ADDED_WALL) {\n        // console.log(\"wall_coordinates: \", action.payload.added_wall_coordinates, \"state \",...state.wall_coordinates].push(action.payload.added_wall_coordinates))\n        return { ...state, wall_coordinates: [...state.wall_coordinates, action.payload.added_wall_coordinates] }\n    }\n\n    if (action.type === nodeActions.REMOVED_WALL) {\n        return {\n            ...state, wall_coordinates: [...state.wall_coordinates.filter(\n                (coordinates) =>\n                    (coordinates[0] != action.payload.removed_wall_coordinates[0])\n                    && (coordinates[1] != action.payload.removed_wall_coordinates[1]))]\n        };\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}