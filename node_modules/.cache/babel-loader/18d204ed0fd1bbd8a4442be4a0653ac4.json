{"ast":null,"code":"import store from \"../../redux/stores/store\";\nimport { dispatchedChangedNodeType } from \"../../redux/dispatchs/grid-dispatchs\";\nexport default function updateWeight(id = \"\") {\n  let grid = store.getState().grid;\n  let coordinates = id.split(\"-\");\n  console.log(\"coordinates: \", coordinates[0], coordinates[1]);\n  let node = grid[coordinates[0]][coordinates[1]];\n  console.log(node[\"type\"]);\n\n  if (node[\"type\"] === \"empty_node\") {\n    node[\"type\"] = \"weight_node\";\n  } else if (node[\"type\"] === \"weight_node\") {\n    node[\"type\"] = \"empty_node\";\n  }\n\n  grid[coordinates[0]][coordinates[1]] = node;\n  dispatchedChangedNodeType(grid);\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/helpers/dom-helpers/update-weight.js"],"names":["store","dispatchedChangedNodeType","updateWeight","id","grid","getState","coordinates","split","console","log","node"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,0BAAlB;AACA,SAASC,yBAAT,QAA0C,sCAA1C;AAEA,eAAe,SAASC,YAAT,CAAsBC,EAAE,GAAC,EAAzB,EACf;AACI,MAAIC,IAAI,GAAGJ,KAAK,CAACK,QAAN,GAAiBD,IAA5B;AACA,MAAIE,WAAW,GAAGH,EAAE,CAACI,KAAH,CAAS,GAAT,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BH,WAAW,CAAC,CAAD,CAAvC,EAA4CA,WAAW,CAAC,CAAD,CAAvD;AACA,MAAII,IAAI,GAAGN,IAAI,CAACE,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,CAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAAC,MAAD,CAAhB;;AACA,MAAGA,IAAI,CAAC,MAAD,CAAJ,KAAiB,YAApB,EACA;AACIA,IAAAA,IAAI,CAAC,MAAD,CAAJ,GAAe,aAAf;AACH,GAHD,MAIK,IAAGA,IAAI,CAAC,MAAD,CAAJ,KAAiB,aAApB,EACL;AACIA,IAAAA,IAAI,CAAC,MAAD,CAAJ,GAAe,YAAf;AACH;;AAEDN,EAAAA,IAAI,CAACE,WAAW,CAAC,CAAD,CAAZ,CAAJ,CAAqBA,WAAW,CAAC,CAAD,CAAhC,IAAuCI,IAAvC;AACAT,EAAAA,yBAAyB,CAACG,IAAD,CAAzB;AACH","sourcesContent":["import store from \"../../redux/stores/store\";\nimport { dispatchedChangedNodeType } from \"../../redux/dispatchs/grid-dispatchs\";\n\nexport default function updateWeight(id=\"\")\n{\n    let grid = store.getState().grid;\n    let coordinates = id.split(\"-\");\n    console.log(\"coordinates: \",coordinates[0], coordinates[1]);\n    let node = grid[coordinates[0]][coordinates[1]]\n    console.log(node[\"type\"])\n    if(node[\"type\"] === \"empty_node\")\n    {\n        node[\"type\"] = \"weight_node\";\n    }\n    else if(node[\"type\"] === \"weight_node\")\n    {\n        node[\"type\"] = \"empty_node\";\n    }\n\n    grid[coordinates[0]][coordinates[1]] = node;\n    dispatchedChangedNodeType(grid);\n}"]},"metadata":{},"sourceType":"module"}