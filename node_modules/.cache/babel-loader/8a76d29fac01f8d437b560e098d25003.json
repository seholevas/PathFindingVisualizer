{"ast":null,"code":"var _jsxFileName = \"/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/algorithms-instruction-page.js\";\nimport React, { Component } from 'react';\nimport Card from '../atoms/holders/card';\nimport MasterCTA from '../atoms/controls/call-to-actions/abstractions/master-call-to-action';\nimport \"../../css/text.css\";\nimport \"../../css/image.css\";\nimport \"../../css/grid.css\";\nimport \"../../css/flex.css\";\nexport default class AlgorithmsInstructionsPage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, \"Meet The Algorithms\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, \"What are the algorithms involved?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row img center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../images/algorithms.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 60\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \"Algorithm is just a fancy word for having thought out list of steps that you take in a specific order. For example, you wouldn't drive your car before you put in the keys, right? What are the algorithms in this application? Glad you asked! These are the algorithms that will help you figure out your path:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \"Some Algorithms are more efficient than others!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex column text-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \"A* Search\"), \" (weighted): arguably the best algorithm; guarentee's the shortest path. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"Dijkstra's Algorithm\"), \" (weighted): the father of algorithms; It will guarentee the shortest path. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, \"Bredth First Search\"), \" (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, \"Depth First Search\"), \" (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      onClick: async () => {\n        await this.props.history.push(\"/Play\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(MasterCTA, {\n      type: \"button\",\n      onClick: async () => {\n        await this.props.history.push(\"/\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Next\")));\n  }\n\n}","map":{"version":3,"sources":["/home/steven/SWE/Code/path-finding-visualizer/src/react/pages/algorithms-instruction-page.js"],"names":["React","Component","Card","MasterCTA","AlgorithmsInstructionsPage","render","require","props","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,sEAAtB;AACA,OAAO,oBAAP;AACA,OAAO,qBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AAEA,eAAe,MAAMC,0BAAN,SAAyCH,SAAzC,CAAmD;AAC9DI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADR,eAKQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CALR,eAQQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAK,MAAA,GAAG,EAAEC,OAAO,CAAC,6BAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CARR,eASQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2TADJ,CATR,eAaQ;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADA,CAbR,eAiBQ;AAAK,MAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,8EADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAJ,iFAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAJ,iHAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAJ,4FAJA,CAjBR,eAwBQ;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,QAAjB;AAA2B,MAAA,OAAO,EAAE,YAAU;AAAC,cAAM,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB,CAAN;AAAyC,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,QAAjB;AAA2B,MAAA,OAAO,EAAE,YAAU;AAAC,cAAM,KAAKF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAAN;AAAmC,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAxBR,CADJ;AAgCH;;AAlC6D","sourcesContent":["import React, { Component } from 'react'\nimport Card from '../atoms/holders/card'\nimport MasterCTA from '../atoms/controls/call-to-actions/abstractions/master-call-to-action';\nimport \"../../css/text.css\"\nimport \"../../css/image.css\"\nimport \"../../css/grid.css\"\nimport \"../../css/flex.css\"\n\nexport default class AlgorithmsInstructionsPage extends Component {\n    render() {\n        return (\n            <Card className={\"grid\"}>\n                    <div className={\"flex row text-block\"}>\n                        <h1>Meet The Algorithms</h1>\n                    </div>\n\n                    <div className={\"flex row text-block\"}>\n                        <h2>What are the algorithms involved?</h2>\n                    </div>\n                    <div className={\"flex row img center\"}><img src={require('../../images/algorithms.png')} /></div>\n                    <div className={\"flex row text-block\"}>\n                        <p>Algorithm is just a fancy word for having thought out list of steps that you take in a specific order. For example, you wouldn't drive your car before you put in the keys, right? What are the algorithms in this application? Glad you asked! These are the algorithms that will help you figure out your path:</p>\n                    </div>\n                    \n                    <div className={\"flex row text-block\"}>\n                    <h3>Some Algorithms are more efficient than others!</h3>\n                    </div>\n\n                    <div className={\"flex column text-block\"}>\n                    <ul><span>A* Search</span> (weighted): arguably the best algorithm; guarentee's the shortest path. </ul>\n                    <ul><span>Dijkstra's Algorithm</span> (weighted): the father of algorithms; It will guarentee the shortest path. </ul>\n                    <ul><span>Bredth First Search</span> (unweighted): dijkstra's carefree brother; gaurentee's the shortest path, but does not care about weights. </ul>\n                    <ul><span>Depth First Search</span> (unweighted): the under achieving algorithm; It will not gaurentee the shortest path! </ul>\n                    </div>\n\n                    <div className={\"flex row\"}>\n                        <MasterCTA type={\"button\"} onClick={async ()=>{await this.props.history.push(\"/Play\"); }}>Skip</MasterCTA>\n                        <MasterCTA type={\"button\"}>Previous</MasterCTA>\n                        <MasterCTA type={\"button\"} onClick={async ()=>{await this.props.history.push(\"/\")}}>Next</MasterCTA>\n                    </div>\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}